{"ast":null,"code":"var _jsxFileName = \"/Users/dessiemompati/Desktop/Development/plus-perth-2019-spikey-forest-dog-frontend/src/components/organisms/RegisterForm.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport FormField from '../molecules/FormField';\nimport Button from '../atoms/Button';\nimport TextLink from '../atoms/TextLink';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      alert: true\n    });\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({\n        name: this.setState.name,\n        email: this.state.email,\n        Password: this.state.password,\n        confirmPassword: this.state.confirmPassword\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n      this.setState({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"register-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FormField, {\n      type: \"text\",\n      name: \"name\",\n      label: \"Name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(FormField, {\n      type: \"text\",\n      name: \"email\",\n      label: \"Email Address\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(FormField, {\n      type: \"text\",\n      name: \"password\",\n      label: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(FormField, {\n      type: \"text\",\n      name: \"confirmPassword\",\n      label: \"Confirm Password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(TextLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Already have an account? Login\")));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/dessiemompati/Desktop/Development/plus-perth-2019-spikey-forest-dog-frontend/src/components/organisms/RegisterForm.js"],"names":["React","Link","FormField","Button","TextLink","RegisterForm","Component","constructor","props","state","name","email","password","confirmPassword","handleChange","bind","handleSubmit","event","target","value","setState","preventDefault","alert","fetch","method","body","JSON","stringify","Password","headers","then","response","json","console","log","catch","err","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport FormField from '../molecules/FormField'\nimport Button from '../atoms/Button'\nimport TextLink from '../atoms/TextLink'\n\n\nclass RegisterForm extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            name:``,\n            email:``,\n            password:``,\n            confirmPassword:``\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n          [name]:value\n        });\n}\nhandleSubmit(event) {\n     event.preventDefault();\n     this.setState({alert:true})\n     fetch('https://jsonplaceholder.typicode.com/posts', {\n       method: 'POST',\n       body: JSON.stringify({\n         name: this.setState.name,\n         email: this.state.email,\n         Password: this.state.password,\n         confirmPassword: this.state.confirmPassword,\n       }),\n       headers: {\n         'Content-type': 'application/json; charset=UTF-8'\n       }\n     })\n       .then(response => response.json())\n       .then(json => {\n         console.log(json);\n         this.setState({ name: '',email: '', password: '', confirmPassword:''});\n       })\n       .catch(err => {\n         console.log(err);\n       });\n   }\n   render(){\n       return(\n        <form className=\"register-form\">\n        <FormField type=\"text\" name=\"name\" label=\"Name\" value={this.state.name} onChange={this.handleChange}/>\n        <FormField type=\"text\" name=\"email\" label=\"Email Address\" value={this.state.email} onChange={this.handleChange}/>\n        <FormField type=\"text\" name=\"password\" label=\"Password\" value={this.state.password} onChange={this.handleChange}/>\n        <FormField type=\"text\" name=\"confirmPassword\" label=\"Confirm Password\" value={this.state.confirmPassword} onChange={this.handleChange}/>\n        <Button>Register</Button>\n        <Link to=\"/login\">\n        <TextLink>Already have an account? Login</TextLink>\n        </Link>\n    </form>\n       );\n   }\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}